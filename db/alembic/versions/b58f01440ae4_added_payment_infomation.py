"""added payment infomation

Revision ID: b58f01440ae4
Revises: 05579a2b9e48
Create Date: 2024-03-27 19:24:31.658402

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b58f01440ae4'
down_revision: Union[str, None] = '05579a2b9e48'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    op.drop_table('profiles')
    op.drop_table('account_cards')
    op.drop_table('accounts')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accounts',
    sa.Column('id', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('account_id', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('account_status', postgresql.ENUM('NEW', 'UNVERIFIED', 'VERIFIED', 'ACTIVE', 'DELETED', 'DISABLED', 'SUSPENDED', name='user_account_statuses_checks_enums'), autoincrement=False, nullable=True),
    sa.Column('account_email_status', postgresql.ENUM('UNVERIFIED', 'VERIFIED', 'VERIFYING', 'FAILED', 'EXPIRED', name='user_email_statuses_checks_enums'), autoincrement=False, nullable=True),
    sa.Column('account_creation_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('account_updated_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('account_status_updated_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_login_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('account_role', postgresql.ENUM('SUPER', 'SYS_ADMIN', 'TESTER', 'USER', 'DEVELOPER', name='user_account_roles_checks_enums'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='accounts_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='accounts_pkey'),
    sa.UniqueConstraint('account_id', name='accounts_account_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('account_cards',
    sa.Column('id', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('card_id', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('card_number', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('card_type', postgresql.ENUM('CHEQUE', 'SAVINGS', 'CREDIT', name='accountpaymenttype'), autoincrement=False, nullable=False),
    sa.Column('card_status', postgresql.ENUM('ACTIVE', 'INACTIVE', 'DISABLED', name='cardstatus'), autoincrement=False, nullable=False),
    sa.Column('created_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', 'card_id', name='account_cards_pkey'),
    sa.UniqueConstraint('card_id', name='account_cards_card_id_key'),
    sa.UniqueConstraint('card_number', name='account_cards_card_number_key'),
    sa.UniqueConstraint('id', name='account_cards_id_key')
    )
    op.create_table('profiles',
    sa.Column('id', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('profile_id', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('account_id', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('date_of_birth', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('gender', postgresql.ENUM('MALE', 'FEMALE', 'OTHER', name='genders_enums'), autoincrement=False, nullable=False),
    sa.Column('profile_picture', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('mobile_number', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('country', postgresql.ENUM('AFGHANISTAN', 'ALBANIA', 'ALGERIA', 'ANDORRA', 'ANGOLA', 'ANTIGUA_AND_BARBUDA', 'ARGENTINA', 'ARMENIA', 'AUSTRALIA', 'AUSTRIA', 'AZERBAIJAN', 'BAHAMAS', 'BAHRAIN', 'BANGLADESH', 'BARBADOS', 'BELARUS', 'BELGIUM', 'BELIZE', 'BENIN', 'BHUTAN', 'BOLIVIA', 'BOSNIA_AND_HERZEGOVINA', 'BOTSWANA', 'BRAZIL', 'BRUNEI', 'BULGARIA', 'BURKINA_FASO', 'BURUNDI', 'CABO_VERDE', 'CAMBODIA', 'CAMEROON', 'CANADA', 'CENTRAL_AFRICAN_REPUBLIC', 'CHAD', 'CHILE', 'CHINA', 'COLOMBIA', 'COMOROS', 'CONGO_DEMOCRATIC_REPUBLIC', 'CONGO_REPUBLIC', 'COSTA_RICA', 'COTE_DIVOIRE', 'CROATIA', 'CUBA', 'CYPRUS', 'CZECH_REPUBLIC', 'DENMARK', 'DJIBOUTI', 'DOMINICA', 'DOMINICAN_REPUBLIC', 'ECUADOR', 'EGYPT', 'EL_SALVADOR', 'EQUATORIAL_GUINEA', 'ERITREA', 'ESTONIA', 'ESWATINI', 'ETHIOPIA', 'FIJI', 'FINLAND', 'FRANCE', 'GABON', 'GAMBIA', 'GEORGIA', 'GERMANY', 'GHANA', 'GREECE', 'GRENADA', 'GUATEMALA', 'GUINEA', 'GUINEA_BISSAU', 'GUYANA', 'HAITI', 'HONDURAS', 'HUNGARY', 'ICELAND', 'INDIA', 'INDONESIA', 'IRAN', 'IRAQ', 'IRELAND', 'ISRAEL', 'ITALY', 'JAMAICA', 'JAPAN', 'JORDAN', 'KAZAKHSTAN', 'KENYA', 'KIRIBATI', 'KOREA_NORTH', 'KOREA_SOUTH', 'KOSOVO', 'KUWAIT', 'KYRGYZSTAN', 'LAOS', 'LATVIA', 'LEBANON', 'LESOTHO', 'LIBERIA', 'LIBYA', 'LIECHTENSTEIN', 'LITHUANIA', 'LUXEMBOURG', 'MADAGASCAR', 'MALAWI', 'MALAYSIA', 'MALDIVES', 'MALI', 'MALTA', 'MARSHALL_ISLANDS', 'MAURITANIA', 'MAURITIUS', 'MEXICO', 'MICRONESIA', 'MOLDOVA', 'MONACO', 'MONGOLIA', 'MONTENEGRO', 'MOROCCO', 'MOZAMBIQUE', 'MYANMAR', 'NAMIBIA', 'NAURU', 'NEPAL', 'NETHERLANDS', 'NEW_ZEALAND', 'NICARAGUA', 'NIGER', 'NIGERIA', 'NORTH_MACEDONIA', 'NORWAY', 'OMAN', 'PAKISTAN', 'PALAU', 'PALESTINE', 'PANAMA', 'PAPUA_NEW_GUINEA', 'PARAGUAY', 'PERU', 'PHILIPPINES', 'POLAND', 'PORTUGAL', 'QATAR', 'ROMANIA', 'RUSSIA', 'RWANDA', 'SAINT_KITTS_AND_NEVIS', 'SAINT_LUCIA', 'SAINT_VINCENT_AND_GRENADINES', 'SAMOA', 'SAN_MARINO', 'SAO_TOME_AND_PRINCIPE', 'SAUDI_ARABIA', 'SENEGAL', 'SERBIA', 'SEYCHELLES', 'SIERRA_LEONE', 'SINGAPORE', 'SLOVAKIA', 'SLOVENIA', 'SOLOMON_ISLANDS', 'SOMALIA', 'SOUTH_AFRICA', 'SOUTH_SUDAN', 'SPAIN', 'SRI_LANKA', 'SUDAN', 'SURINAME', 'SWEDEN', 'SWITZERLAND', 'SYRIA', 'TAIWAN', 'TAJIKISTAN', 'TANZANIA', 'THAILAND', 'TIMOR_LESTE', 'TOGO', 'TONGA', 'TRINIDAD_AND_TOBAGO', 'TUNISIA', 'TURKEY', 'TURKMENISTAN', 'TUVALU', 'UGANDA', 'UKRAINE', 'UNITED_ARAB_EMIRATES', 'UNITED_KINGDOM', 'UNITED_STATES', 'URUGUAY', 'UZBEKISTAN', 'VANUATU', 'VATICAN_CITY', 'VENEZUELA', 'VIETNAM', 'YEMEN', 'ZAMBIA', 'ZIMBABWE', name='countries_enums'), autoincrement=False, nullable=False),
    sa.Column('language', postgresql.ENUM('AFRIKAANS', 'ALBANIAN', 'AMHARIC', 'ARABIC', 'ARMENIAN', 'ASSAMESE', 'AZERBAIJANI', 'BENGALI', 'BOSNIAN', 'BULGARIAN', 'BURMESE', 'CATALAN', 'CHINESE_MANDARIN', 'CROATIAN', 'CZECH', 'DANISH', 'DUTCH', 'ENGLISH', 'ESTONIAN', 'FINNISH', 'FRENCH', 'GEORGIAN', 'GERMAN', 'GREEK', 'GUJARATI', 'HEBREW', 'HINDI', 'HUNGARIAN', 'ICELANDIC', 'INDONESIAN', 'IRISH', 'ITALIAN', 'JAPANESE', 'JAVANESE', 'KANNADA', 'KAZAKH', 'KHMER', 'KOREAN', 'KURDISH', 'KYRGYZ', 'LAO', 'LATVIAN', 'LITHUANIAN', 'MACEDONIAN', 'MALAY', 'MALAYALAM', 'MARATHI', 'MONGOLIAN', 'NEPALI', 'NORWEGIAN', 'ORIYA', 'PASHTO', 'PERSIAN', 'POLISH', 'PORTUGUESE', 'PUNJABI', 'ROMANIAN', 'RUSSIAN', 'SERBIAN', 'SINHALA', 'SLOVAK', 'SLOVENIAN', 'SOMALI', 'SPANISH', 'SUNDANESE', 'SWAHILI', 'SWEDISH', 'TAGALOG', 'TAJIK', 'TAMIL', 'TATAR', 'TELUGU', 'THAI', 'TIBETAN', 'TURKISH', 'TURKMEN', 'UKRAINIAN', 'URDU', 'UZBEK', 'VIETNAMESE', 'WU_CHINESE', 'XHOSA', 'YIDDISH', 'YORUBA', 'ZULU', name='languages_enums'), autoincrement=False, nullable=True),
    sa.Column('biography', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('occupation', postgresql.ENUM('SOFTWARE_ENGINEER', 'HARDWARE_ENGINEER', 'ELECTRICAL_ENGINEER', 'MECHANICAL_ENGINEER', 'CIVIL_ENGINEER', 'BIOMEDICAL_ENGINEER', 'DOCTOR', 'NURSE', 'TEACHER', 'PROFESSOR', 'ARTIST', 'MUSICIAN', 'WRITER', 'ACCOUNTANT', 'LAWYER', 'POLICE_OFFICER', 'FIREFIGHTER', 'CHEF', 'ARCHITECT', 'SCIENTIST', 'STUDENT', 'RETIREE', 'ENTREPRENEUR', 'ATHLETE', 'JOURNALIST', 'DESIGNER', 'PHARMACIST', 'SOCIAL_WORKER', 'OTHER', name='occupations_enums'), autoincrement=False, nullable=True),
    sa.Column('interests', postgresql.ARRAY(sa.VARCHAR(length=256)), autoincrement=False, nullable=True),
    sa.Column('social_media_links', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.account_id'], name='profiles_account_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='profiles_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('salt_value', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key')
    )
    # ### end Alembic commands ###
