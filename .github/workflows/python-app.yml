name: Python application

on:
  push:
    branches: ["release/Production", "release/UAT", "release/Development"]
  pull_request:
    branches: ["release/Production", "release/UAT", "release/Development"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15.3
        env:
          POSTGRES_DB: py_coin_db_test
          POSTGRES_USER: py_user_test
          POSTGRES_PASSWORD: py_user_password_test
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3

      # New steps to copy test.env to .env and source it
      - name: Copy test.env to .env
        run: cp test.env .env

      - name: Source .env file
        run: source .env

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint mypy pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with pylint
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          pylint .
      - name: Run Mypy
        run: |
          mypy .
      - name: Test with pytest
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          pytest

  docker-compose:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # New steps to copy test.env to .env and source it
      - name: Copy test.env to .env
        run: cp test.env .env

      - name: Source .env file
        run: source .env

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build and start services with Docker Compose
        run: |
          docker-compose -f docker-compose.yaml up -d
          docker-compose -f docker-compose.yaml ps
          
      - name: Run tests
        run: |
          docker-compose -f docker-compose.yaml exec postgres pytest

      - name: Stop services
        run: docker-compose -f docker-compose.yaml down
